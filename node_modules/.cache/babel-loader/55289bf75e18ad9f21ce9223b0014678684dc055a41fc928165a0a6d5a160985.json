{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andre\\\\Portfolio_Dev\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.scss';\nimport Home from './Home';\nimport DarkMode from './Navbar/darkMode';\nimport Navbar from './Navbar';\nimport LogoReactDark from './img/logo2.svg';\nimport LogoReactLight from './img/logo.svg';\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  let [darkMode, setDarkMode] = useState('modo-claro');\n  let [logoReact, setLogoReact] = useState(LogoReactLight);\n  const changeMode = () => {\n    if (darkMode === 'modo-claro') {\n      setDarkMode('modo-escuro');\n      setLogoReact(LogoReactDark);\n    } else {\n      setDarkMode('modo-claro');\n      setLogoReact(LogoReactLight);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: darkMode,\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        children: [\" \", /*#__PURE__*/_jsxDEV(DarkMode, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container--app\",\n            onClick: changeMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 27\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 16\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Home, {\n        children: [\"  \", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoReact,\n          alt: \"Logo-React-Animado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FWzVp9zWkru7lCGGprM99w1+cSM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Home","DarkMode","Navbar","LogoReactDark","LogoReactLight","React","useState","jsxDEV","_jsxDEV","App","props","_s","darkMode","setDarkMode","logoReact","setLogoReact","changeMode","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Andre/Portfolio_Dev/src/App.js"],"sourcesContent":["import './App.scss';\r\nimport Home from './Home'\r\nimport DarkMode from './Navbar/darkMode';\r\nimport Navbar from './Navbar';\r\nimport LogoReactDark from './img/logo2.svg';\r\nimport LogoReactLight from './img/logo.svg';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction App(props) {\r\n\r\n  let [darkMode, setDarkMode] = useState('modo-claro');    \r\n  let [logoReact, setLogoReact] = useState(LogoReactLight);\r\n  \r\n\r\n  const changeMode = () =>  {\r\n          if (darkMode === 'modo-claro'){\r\n            setDarkMode('modo-escuro');\r\n            setLogoReact(LogoReactDark); \r\n                    \r\n          }\r\n          else  {\r\n            setDarkMode('modo-claro');\r\n            \r\n            setLogoReact(LogoReactLight);\r\n          }\r\n    }   \r\n  \r\n\r\n  return (\r\n\r\n    <div className=\"App\"> \r\n    <div className={darkMode}>\r\n\r\n\r\n      <Navbar> <DarkMode> <div className='button-container--app' onClick={changeMode}></div> </DarkMode> </Navbar>\r\n      <Home>  <img src={logoReact} alt=\"Logo-React-Animado\"></img> </Home>\r\n\r\n     \r\n      \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAOA,IAAI,MAAM,QAAQ;AACzB,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,cAAc,MAAM,gBAAgB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGjC,SAASC,GAAGA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAElB,IAAI,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,YAAY,CAAC;EACpD,IAAI,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAACF,cAAc,CAAC;EAGxD,MAAMY,UAAU,GAAGA,CAAA,KAAO;IAClB,IAAIJ,QAAQ,KAAK,YAAY,EAAC;MAC5BC,WAAW,CAAC,aAAa,CAAC;MAC1BE,YAAY,CAACZ,aAAa,CAAC;IAE7B,CAAC,MACK;MACJU,WAAW,CAAC,YAAY,CAAC;MAEzBE,YAAY,CAACX,cAAc,CAAC;IAC9B;EACN,CAAC;EAGH,oBAEEI,OAAA;IAAKS,SAAS,EAAC,KAAK;IAAAC,QAAA,eACpBV,OAAA;MAAKS,SAAS,EAAEL,QAAS;MAAAM,QAAA,gBAGvBV,OAAA,CAACN,MAAM;QAAAgB,QAAA,GAAC,GAAC,eAAAV,OAAA,CAACP,QAAQ;UAAAiB,QAAA,GAAC,GAAC,eAAAV,OAAA;YAAKS,SAAS,EAAC,uBAAuB;YAACE,OAAO,EAAEH;UAAW;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,KAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5Gf,OAAA,CAACR,IAAI;QAAAkB,QAAA,GAAC,IAAE,eAAAV,OAAA;UAAKgB,GAAG,EAAEV,SAAU;UAACW,GAAG,EAAC;QAAoB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAI/D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACZ,EAAA,CAlCQF,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
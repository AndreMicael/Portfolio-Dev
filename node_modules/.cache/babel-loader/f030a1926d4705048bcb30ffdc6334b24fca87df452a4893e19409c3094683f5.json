{"ast":null,"code":"import _slicedToArray from\"C:/Users/Andre/Portfolio_Dev/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{createContext,useState}from\"react\";import ReactLogoDark from'../img/logo2.svg';import ReactLogoLight from'../img/logo.svg';import{jsx as _jsx}from\"react/jsx-runtime\";export var ThemeContext=/*#__PURE__*/createContext();export var ThemeProvider=function ThemeProvider(_ref){var children=_ref.children;var _useState=useState('modo-claro'),_useState2=_slicedToArray(_useState,2),theme=_useState2[0],setTheme=_useState2[1];var _useState3=useState(ReactLogoLight),_useState4=_slicedToArray(_useState3,2),logoToggle=_useState4[0],setLogoToggle=_useState4[1];var toggleTheme=function toggleTheme(){setTheme(theme===\"modo-claro\"?\"modo-escuro\":\"modo-claro\");};var toggleLogo=function toggleLogo(){setLogoToggle(logoToggle===ReactLogoDark?ReactLogoLight:ReactLogoDark);};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{theme:theme,toggleTheme:toggleTheme,toggleLogo:toggleLogo,logoToggle:logoToggle,setTheme:setTheme},children:children});};","map":{"version":3,"names":["createContext","useState","ReactLogoDark","ReactLogoLight","jsx","_jsx","ThemeContext","ThemeProvider","_ref","children","_useState","_useState2","_slicedToArray","theme","setTheme","_useState3","_useState4","logoToggle","setLogoToggle","toggleTheme","toggleLogo","Provider","value"],"sources":["C:/Users/Andre/Portfolio_Dev/src/Context/ThemeContext.jsx"],"sourcesContent":["import { createContext, useState } from \"react\"\r\nimport ReactLogoDark from '../img/logo2.svg'\r\nimport ReactLogoLight from '../img/logo.svg'\r\n\r\nexport const ThemeContext = createContext()\r\n\r\nexport const ThemeProvider = ({children}) => {\r\n   \r\n    const [theme, setTheme] = useState('modo-claro');\r\n\r\n    const [logoToggle,setLogoToggle] = useState(ReactLogoLight);\r\n\r\n\r\n\r\n      const toggleTheme = () => {\r\n        setTheme(theme === \"modo-claro\" ? \"modo-escuro\" : \"modo-claro\" );\r\n      };\r\n\r\n\r\n\r\n    const toggleLogo = () => {\r\n        setLogoToggle(logoToggle === ReactLogoDark ? ReactLogoLight : ReactLogoDark );\r\n    }\r\n\r\n    return(\r\n        <ThemeContext.Provider value={{theme,toggleTheme,toggleLogo,logoToggle,setTheme}}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n\r\n    )\r\n\r\n}"],"mappings":"kHAAA,OAASA,aAAa,CAAEC,QAAQ,KAAQ,OAAO,CAC/C,MAAO,CAAAC,aAAa,KAAM,kBAAkB,CAC5C,MAAO,CAAAC,cAAc,KAAM,iBAAiB,QAAAC,GAAA,IAAAC,IAAA,yBAE5C,MAAO,IAAM,CAAAC,YAAY,cAAGN,aAAa,CAAC,CAAC,CAE3C,MAAO,IAAM,CAAAO,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAAC,IAAA,CAAmB,IAAd,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CAEnC,IAAAC,SAAA,CAA0BT,QAAQ,CAAC,YAAY,CAAC,CAAAU,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAzCG,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IAEtB,IAAAI,UAAA,CAAmCd,QAAQ,CAACE,cAAc,CAAC,CAAAa,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAApDE,UAAU,CAAAD,UAAA,IAACE,aAAa,CAAAF,UAAA,IAI7B,GAAM,CAAAG,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAA,CAAS,CACxBL,QAAQ,CAACD,KAAK,GAAK,YAAY,CAAG,aAAa,CAAG,YAAa,CAAC,CAClE,CAAC,CAIH,GAAM,CAAAO,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAA,CAAS,CACrBF,aAAa,CAACD,UAAU,GAAKf,aAAa,CAAGC,cAAc,CAAGD,aAAc,CAAC,CACjF,CAAC,CAED,mBACIG,IAAA,CAACC,YAAY,CAACe,QAAQ,EAACC,KAAK,CAAE,CAACT,KAAK,CAALA,KAAK,CAACM,WAAW,CAAXA,WAAW,CAACC,UAAU,CAAVA,UAAU,CAACH,UAAU,CAAVA,UAAU,CAACH,QAAQ,CAARA,QAAQ,CAAE,CAAAL,QAAA,CAC5EA,QAAQ,CACU,CAAC,CAIhC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
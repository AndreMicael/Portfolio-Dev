{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andre\\\\Portfolio_Dev\\\\src\\\\Navbar\\\\darkMode.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './darkMode.scss';\nimport { useState, useEffect } from 'react';\nimport Sun from '../img/sun.png';\nimport Moon from '../img/moon.png';\nimport { useContext } from 'react';\nimport { ThemeContext } from '../Context/ThemeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DarkMode(props) {\n  _s();\n  const [circleToggle, setcircleToggle] = useState('0');\n  const [icon, setIcon] = useState(Sun);\n  const {\n    theme,\n    toggleTheme,\n    toggleLogo\n  } = useContext(ThemeContext);\n  const handleClick = () => {\n    setcircleToggle(!circleToggle);\n    toggleTheme();\n    toggleLogo();\n  };\n  const containerStyle = {\n    transform: circleToggle ? 'translateX(1%)' : 'translateX(115%)'\n  };\n  useEffect(() => {\n    const toggleIcon = () => {\n      setIcon(icon === Sun ? Moon : Sun);\n    };\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"button--container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button--border\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button--circle\",\n        style: containerStyle,\n        onClick: handleClick,\n        children: [props.children, /*#__PURE__*/_jsxDEV(\"img\", {\n          src: icon,\n          alt: \"icon-darkmode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(DarkMode, \"dzm1fdZuXR0FYvWkrbSjEFTXNkw=\");\n_c = DarkMode;\nexport default DarkMode;\nvar _c;\n$RefreshReg$(_c, \"DarkMode\");","map":{"version":3,"names":["React","useState","useEffect","Sun","Moon","useContext","ThemeContext","jsxDEV","_jsxDEV","DarkMode","props","_s","circleToggle","setcircleToggle","icon","setIcon","theme","toggleTheme","toggleLogo","handleClick","containerStyle","transform","toggleIcon","className","children","style","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Andre/Portfolio_Dev/src/Navbar/darkMode.js"],"sourcesContent":["import React from 'react';\r\nimport './darkMode.scss'\r\nimport { useState, useEffect } from 'react';\r\nimport Sun from '../img/sun.png';\r\nimport Moon from '../img/moon.png';\r\nimport { useContext } from 'react';\r\nimport { ThemeContext } from '../Context/ThemeContext';\r\n\r\n\r\nfunction DarkMode(props) {\r\n\r\n    const [circleToggle, setcircleToggle] = useState('0');\r\n    const [icon,setIcon] = useState(Sun);\r\n    const {theme, toggleTheme,toggleLogo} = useContext(ThemeContext);\r\n\r\n\r\n    \r\n\r\n    const handleClick = () => {\r\n        setcircleToggle(!circleToggle);\r\n        toggleTheme();\r\n        toggleLogo();\r\n        \r\n      };\r\n    \r\n      const containerStyle = {        \r\n        transform: circleToggle ? 'translateX(1%)' : 'translateX(115%)',        \r\n      };  \r\n\r\n      useEffect(() => {\r\n        \r\n       const toggleIcon = () => {\r\n        setIcon(icon === Sun ? Moon : Sun);\r\n       }\r\n      \r\n    \r\n      }, [theme]);\r\n \r\n\r\n\r\n\r\n    return ( \r\n\r\n        <div className='button--container' >  \r\n            <div className='button--border' > \r\n            <div className='button--circle' style={containerStyle} onClick={handleClick}>{props.children}   \r\n                <img src={icon} alt=\"icon-darkmode\"/>\r\n            </div>\r\n            </div>\r\n        </div>\r\n\r\n     );\r\n}\r\n\r\nexport default DarkMode;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AACxB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,GAAG,MAAM,gBAAgB;AAChC,OAAOC,IAAI,MAAM,iBAAiB;AAClC,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,YAAY,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvD,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAErB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,GAAG,CAAC;EACrD,MAAM,CAACa,IAAI,EAACC,OAAO,CAAC,GAAGd,QAAQ,CAACE,GAAG,CAAC;EACpC,MAAM;IAACa,KAAK;IAAEC,WAAW;IAACC;EAAU,CAAC,GAAGb,UAAU,CAACC,YAAY,CAAC;EAKhE,MAAMa,WAAW,GAAGA,CAAA,KAAM;IACtBN,eAAe,CAAC,CAACD,YAAY,CAAC;IAC9BK,WAAW,CAAC,CAAC;IACbC,UAAU,CAAC,CAAC;EAEd,CAAC;EAED,MAAME,cAAc,GAAG;IACrBC,SAAS,EAAET,YAAY,GAAG,gBAAgB,GAAG;EAC/C,CAAC;EAEDV,SAAS,CAAC,MAAM;IAEf,MAAMoB,UAAU,GAAGA,CAAA,KAAM;MACxBP,OAAO,CAACD,IAAI,KAAKX,GAAG,GAAGC,IAAI,GAAGD,GAAG,CAAC;IACnC,CAAC;EAGF,CAAC,EAAE,CAACa,KAAK,CAAC,CAAC;EAKb,oBAEIR,OAAA;IAAKe,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAC9BhB,OAAA;MAAKe,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC/BhB,OAAA;QAAKe,SAAS,EAAC,gBAAgB;QAACE,KAAK,EAAEL,cAAe;QAACM,OAAO,EAAEP,WAAY;QAAAK,QAAA,GAAEd,KAAK,CAACc,QAAQ,eACxFhB,OAAA;UAAKmB,GAAG,EAAEb,IAAK;UAACc,GAAG,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAGd;AAACrB,EAAA,CA3CQF,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AA6CjB,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}